var array = [1, 2, 3];
array.push(4);
  配列の末尾に値を追加するにはpushメソッドを使用
array.unshift(0);
  配列の先頭に値を追加するにはunshiftメソッドを使用
  
  
var array1 = [1, 2, 3];
var array2 = [4, 5, 6];
array1.concat(array2);
  2つの配列を連結させるにはconcatメソッドを使用
  

array[array.length - 1];
末尾の要素のインデックスを取得する場合、[配列の長さ - 1] をインデックスに指定


var array = [1, 2, 3, 4, 5];
array[2] = 5;
  指定位置の要素を置き換える

var array = [1, 2, 3, 4, 5];
var a = array.shift();
  先頭の要素を取得し、同時に削除する
var a = array.pop();
  末尾の要素を取得し、同時に削除する
  
var array = [1, 2, 3, 4, 5, 6];
var a = array.splice(3, 2, 14, 15, 16);
  配列の途中から複数の値を削除し、別の複数の値を挿入する 
  添字の3から2つの要素をその後の要素に置き換える
  
var array = [1, 2, 4];
array.splice(2, 0, 3);
  配列の途中に値を挿入する
  
var array = [1, 2, 3, 5, 3, 2, 7];
var index = array.indexOf(3);
  先頭から検索して要素の位置を取得する
var index = array.lastIndexOf(3);
  末尾から検索して要素の位置を取得する
array.join(","));
  要素を連結して文字列化する
array.slice(1, 3)
  配列の一部を切り出す 
  配列の2番目から2つの要素を切り出す
  配列の一部を切り出す
array.sort();
  配列をソートする


array.forEach(v, idx) => {
  console.log(idx + ":" +v);
});
  配列の各要素に対して個別に関数を実行するにはforEachを使用
  
var array = [1, 2, 3, 4, 5, 6];
array.filter(v => {
  return v % 2 ===0;
});
  要素を条件で絞る
  配列の各要素に対して条件で絞るにはfilterを使用

var array = [1, 2, 3, 4, 5, 6];
array.map(v => {
  return v + 5;
});
  要素を変換する
  各要素に5を足した 新しい配列を生成
  
var array = [1, 2, 3, 4, 5, 6];
array.find(v => {
  return v % 2 ===0;
});
  条件に合う最初の要素を検索し、その要素を返す]
  
var array = [1, 2, 3, 4, 5, 6];
array.findIndex(v => {
  return v % 2 ===0;
});
  条件に合う最初の要素を検索し、そのインデックスを返す
  最初の偶数を検索し、その添字を返す
  
array.every(v => {
  return v % 2 ===0;
});
  すべての要素が条件を満たすかを検証する
  
array.some(v => {
  return v % 2 ===0;
});
  いずれかの要素が条件を満たすかを検証する
  
array.reduce((a, b) => {
  return a +b;
});
  要素に関数を適用しながらまとめる
  
array.reduce((a, b) => {
  // なにかの処理
}, 初期値);
  要素に関数を適用しながらまとめる
